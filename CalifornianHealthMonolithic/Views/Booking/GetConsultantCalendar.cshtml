@model CalifornianHealthMonolithic.Models.ConsultantModelList

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="position: fixed; top: 15vh; width:100%">
    <div id="snackbar" style="display:flex; position:absolute; justify-content:flex-end; z-index:999; visibility:hidden; left:75%; padding: 20px; border-radius:5px;"></div>
</div>

<div style="display:flex; margin:20px auto; justify-content:center">
    <section>
        <label for="consultant">Select Consultant you wish to make an appointment for</label>
        <div class="form-group" style="width:240px">
            @if (Model != null)
            {

                @Html.DropDownListFor(m => m.selectedConsultantId, Model.ConsultantsList, "- Please select Consultant -", new { @class = "form-control", @onchange = "onChangeDropdown(this)" })
                @Html.ValidationMessageFor(m => m.selectedConsultantId)
            }
        </div>
    </section>
</div>

<section style="max-width:1000px; margin: 0 auto">
    <div id='calendar'></div>
</section>

<style>
    #snackbar.loading_consultant {
        background: orange;
        visibility: visible !important;
    }

    #snackbar.loading_calendar {
        background: orange;
        visibility: visible !important;
    }

    #snackbar.calendar_loaded {
        background: blue;
        visibility: visible !important;
    }

    #snackbar.appointment_booked {
        background: green;
        visibility: visible !important;
    }

    #snackbar.error {
        background: red;
        visibility: visible !important;
    }
</style>

<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
<script>
    var consultantIdSelected = 0;

    function sleep(milliseconds) {
        while ((new Date().getTime()) < new Date().getTime() + milliseconds) { }
    }

    function getConsultantCalendar(id) {
        var url = "http://localhost:55258/Booking/GetConsultantCalendarRequest/" + id;
        fetch(url, { method: "GET" })
            .then(response => {
                return response.json()
            })
            .then(data => {
                console.log("consolutant:" + id + " calendar loaded");
                console.log(data)
                var calendarEl = document.getElementById('calendar');
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'timeGridWeek',
                    firstDay: 1,
                    selectable: true,
                    slotMinTime: '08:00',
                    dateClick: handleDateClick,
                    weekends: false
                });
                for (let i = 0; i < data.length; i++) {
                    calendar.addEventSource({
                        events: [
                            { title: 'Appointment', start: data[i].startDate, end: data[i].endDate }
                        ]
                    });
                }
                calendar.render();
                var snackbar = document.getElementById('snackbar')
                snackbar.classList.remove('loading_calendar')
                snackbar.classList.add('calendar_loaded')
                snackbar.textContent = "Calendar loaded !"
                setTimeout(() => {
                    snackbar.classList.remove('calendar_loaded')
                }, 3000)
            });
    }

    function onChangeDropdown(element) {
        var snackbar = document.getElementById('snackbar')
        snackbar.classList.add('loading_calendar')
        snackbar.textContent = "Loading calendar..."

        console.log("onchange triggered: " + element.options[element.value].innerHTML);
        console.log("onchange triggered: " + element.value);
        consultantIdSelected = element.value
        getConsultantCalendar(element.value)
    }

    function handleDateClick(info) {
        const hourSelected = new Date(info.dateStr).getHours();
        if (new Date(info.dateStr) < Date.now()) {
            alert('time machine required')
        }
        else if (hourSelected < 8 || hourSelected >= 18 || hourSelected == 12) {
            alert('the date you selected is outside the working hours')
        } else {
            //alert('time selected: ' + info.dateStr);
            console.log(new Date(info.dateStr))
            name = prompt("enter your name");
            fetch("http://localhost:55258/Booking/BookAppointment", {
                method: "POST",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    PatientName: name,
                    ConsultantId: consultantIdSelected,
                    startDate: new Date(info.dateStr),
                })
            })
                .then(data => data.json())
                .then(data => {
                    var snackbar = document.getElementById('snackbar')
                    if (data == "200") {
                        snackbar.classList.add('appointment_booked')
                        snackbar.textContent = "Appointment successfully booked !"
                    } else if (date = "409") {
                        snackbar.classList.add('error')
                        snackbar.textContent = "ERROR: appontment already booked !"
                    } else {
                        snackbar.classList.add('error')
                        snackbar.textContent = "ERROR"
                    }
                    setTimeout(() => {
                        snackbar.classList.remove('appointment_booked')
                        snackbar.classList.remove('error')
                    }, 3000)
                    getConsultantCalendar(consultantIdSelected)
                })
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        //getConsultantCalendar(1)
    });
</script>