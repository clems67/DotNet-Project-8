@model CalifornianHealthMonolithic.Models.ConsultantModelList

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section>
    <label for="consultant">Select Consultant you wish to make an appointment for</label>
    <div class="form-group">
        @if(Model != null)
            {

        @Html.DropDownListFor(m => m.selectedConsultantId, Model.ConsultantsList, "- Please select -", new { @class = "form-control", @onchange = "onChangeDropdown(this)" })
        @Html.ValidationMessageFor(m => m.selectedConsultantId)
            }
    </div>

</section>

<section style="max-width:1000px; margin: 0 auto">
    <div id='calendar'></div>
</section>

<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
<script>
    function getConsultantCalendar(id) {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'timeGridWeek',
            firstDay: 1,
            selectable: true,
            slotMinTime: '08:00',
            dateClick: handleDateClick,
            weekends: false
        });
        calendar.render();

        var url = "http://localhost:55258/Booking/GetConsultantCalendarRequest/" + id;
        fetch(url, { method: "GET"})
            .then(response => {
                return response.json()
            })
            .then(data => {
                for (let i = 0; i < data.Appointments.length; i++) {
                    calendar.addEventSource({
                        events: [
                            { title: 'Appointment', start: data.Appointments[i].startDate, end: data.Appointments[i].endDate }
                        ]
                    });
                }
            });
    }

    function onChangeDropdown(element) {
        console.log("onchange triggered: " + element.options[element.value].innerHTML);
        console.log("onchange triggered: " + element.value);

        getConsultantCalendar(element.value)
    }

    function handleDateClick(info) {
        const hourSelected = new Date(info.dateStr).getHours();
        if (new Date(info.dateStr) < Date.now()) {
            alert('time machine required')
        }
        else if (hourSelected < 8 || hourSelected >= 18 || hourSelected == 12) {
            alert('the date you selected is outside the working hours')
        } else {
            alert('time selected: ' + info.dateStr);
            fetch("http://localhost:55258/Booking/TestPostMethod", {
                method: "POST",
                body: JSON.stringify({
                    consultantId: 0,
                    patientName: "bob"
                })
            })
            .then(data => data.json())
            .then(data => {
                console.log(data)
            })
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        getConsultantCalendar(1)
    });
</script>